{"version":3,"sources":["firebase-config.js","Components/NavBar.js","Components/GlobalStats.js","Components/GraphStats.js","Components/GraphSearch.js","Components/AllCountries.js","Components/SearchBar.js","Components/InfoPanel.js","Components/FootNav.js","App.js","index.js"],"names":["firebaseConfig","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","textDecoration","color","breakpoints","up","display","labels","0.5","1","1.5","2","2.5","3","3.5","4","4.5","5","NavBar","userId","classes","React","useState","value","setValue","hover","setHover","date","Date","useEffect","database","ref","update","rating","getDate","getMonth","getFullYear","time","getHours","getMinutes","getSeconds","className","AppBar","position","style","background","Toolbar","Typography","variant","href","alt","src","width","height","Box","ml","Rating","name","precision","onChange","event","newValue","onChangeActive","newHover","maxWidth","margin","marginTop","paper","padding","textAlign","palette","text","secondary","wordWrap","GlobalStats","currentScreen","data","covidData","setCovidData","a","fetch","res","json","getCovidData","index","Grid","container","Object","keys","map","key","ind","toUpperCase","item","xs","sm","Paper","elevation","dataDeaths","dataConfirmed","dataRecovered","apiData","valueOf","month","dataIndex","usingDate","year","dateDash","GraphStats","country","Loading","setLoading","error","setError","ability","setAbility","monthName","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","dataR","setDataR","GetApiData","toLowerCase","charAt","slice","deaths","confirmed","recovered","resConf","countryResConf","response","cases","total","FormControl","component","FormLabel","RadioGroup","aria-label","target","FormControlLabel","control","Radio","disabled","option","fontSize","GraphSearch","props","textChange","setText","onSubmit","preventDefault","document","getElementById","Autocomplete","id","options","countries","autoHighlight","getOptionLabel","renderOption","Fragment","isoCode","code","String","fromCodePoint","replace","char","charCodeAt","phone","renderInput","params","TextField","inputProps","autoComplete","e","type","suggested","bigDataCountry","checker","AllCountries","totalData","setTotalData","invalidText","setInvalidText","resq","resApi","res2","getCountry","user","ip","loc","GetAPi","alert","res1","totalCases","location","covid19Stats","length","getData","city","province","SearchBar","FullWidthGrid","bottom","left","right","FootNav","screenConfig","square","Tabs","indicatorColor","textColor","Tab","icon","Math","floor","random","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.52b3c47a.chunk.js","sourcesContent":["\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBpAxHYRQLQDa4mEMIjOBeSmi_8ELPnh38\",\r\n    authDomain: \"userdataforcovid19.firebaseapp.com\",\r\n    projectId: \"userdataforcovid19\",\r\n    storageBucket: \"userdataforcovid19.appspot.com\",\r\n    messagingSenderId: \"584697706575\",\r\n    appId: \"1:584697706575:web:05d86e085e0d50ac63123a\",\r\n    measurementId: \"G-83Y7TZ2TZP\"\r\n\r\n};\r\nexport const firebaseConfig = firebase.initializeApp(config);","import React, { useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, Box } from '@material-ui/core/';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { firebaseConfig } from '../firebase-config'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    textDecoration: 'none',\r\n    color: '#B22222',\r\n    flexGrow: 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n}));\r\nconst labels = {\r\n  0.5: '10%',\r\n  1: '20%',\r\n  1.5: '30%',\r\n  2: '40%',\r\n  2.5: '50%',\r\n  3: '60%',\r\n  3.5: '70%',\r\n  4: '80%',\r\n  4.5: '90%',\r\n  5: '100%',\r\n};\r\nexport default function NavBar({userId}) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(4);\r\n  const [hover, setHover] = React.useState(-1);\r\n \r\n  let date = new Date()\r\n  useEffect(()=>{\r\n    firebaseConfig.database().ref('/userid' + (userId)).update({\r\n      rating: value,\r\n      date: date.getDate() + \" - \" +  (date.getMonth()+1) + \" - \" +  date.getFullYear(),\r\n      time: date.getHours() + \" : \" + date.getMinutes() + \" : \" + date.getSeconds()\r\n    })\r\n  })\r\n// #012\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{background:' rgb(30, 56, 82)'}}>\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\">\r\n            <a href=\"./\" className={classes.title}>\r\n              <img alt=\"app-logo\" src=\"https://themefire.pro/wp-content/uploads/2020/03/03.png\" width=\"50\" height=\"50\" style={{display:'inline-block'}}/>\r\n              COVID'19 Tracker</a>\r\n          </Typography>\r\n          {value !== null && <Box ml={2}>{labels[hover !== -1 ? hover : value]}</Box>}\r\n          <Rating\r\n            name=\"hover-feedback\"\r\n            value={value}\r\n            precision={0.5}\r\n            onChange={(event, newValue) => {\r\n              setValue(newValue);\r\n            }}\r\n            onChangeActive={(event, newHover) => {\r\n              setHover(newHover);\r\n            }}\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1000,\r\n    margin: '0 auto',\r\n    marginTop: 50\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    wordWrap: 'breakWord'\r\n  },\r\n}));\r\n\r\nexport default function GlobalStats({currentScreen}) {\r\n  const [covidData, setCovidData] = useState({});\r\n  let data;\r\n  \r\n  useEffect(()=>{\r\n    async function getCovidData(){\r\n      const res = await fetch(\"https://covid-19-data.p.rapidapi.com/totals\", {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n          \"x-rapidapi-host\": \"covid-19-data.p.rapidapi.com\"\r\n        }\r\n      })\r\n      data = await res.json()\r\n      setCovidData(data[0])\r\n    }\r\n    getCovidData()\r\n  }, [data])\r\n  const classes = useStyles();\r\n  let color = \"white\"\r\n  let index = 0;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        {Object.keys(covidData).map((key, ind) => {\r\n          if(index >= 4){\r\n            return\r\n          }\r\n          index++;\r\n          if(key.toUpperCase() === \"CONFIRMED\"){\r\n            color = \"DodgerBlue\"\r\n          }\r\n          else if(key.toUpperCase() === \"RECOVERED\"){\r\n            color = \"#228B22\"\r\n          }\r\n          if(key.toUpperCase() === \"CRITICAL\"){\r\n            color = \"#FF0000\"\r\n          }\r\n          if(key.toUpperCase() === \"DEATHS\"){\r\n            color = \"#FA8072\"\r\n          }\r\n          return(\r\n            <Grid item xs={6} sm={6} key={ind}>\r\n              <Paper className={classes.paper} style={{color: color}} elevation={3}>\r\n                \r\n                <h3>{key.toUpperCase()}</h3>\r\n                <b>{covidData[key]}</b>\r\n              </Paper>\r\n            </Grid>\r\n          )\r\n        })}\r\n        \r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { FormControl, FormLabel, FormControlLabel, RadioGroup, Radio } from '@material-ui/core'\r\n\r\nlet dataDeaths = [], dataConfirmed = [], dataRecovered = []\r\nlet apiData = []\r\nlet date = new Date((new Date((new Date().valueOf() - 1000 * 60 * 60 * 24)).valueOf() - 1000 * 60 * 60 * 24));\r\nlet month = date.getMonth() + 1\r\nlet dataIndex = 7\r\nlet title;\r\nlet usingDate = date.getDate()\r\nlet year = date.getFullYear();\r\nlet dateDash = \"-\";\r\n\r\nexport default function GraphStats({ text }) {\r\n\r\n  let country\r\n  const [value, setValue] = React.useState('country');\r\n  const [Loading, setLoading] = React.useState('');\r\n  const [error, setError] = React.useState('');\r\n  const [ability, setAbility] = React.useState(false)\r\n\r\n  let monthName = [\r\n    'Dec', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July'\r\n  ]\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n  const [dataR, setDataR] = React.useState({\r\n    labels: [monthName[0], monthName[1], monthName[2], monthName[3], monthName[4], monthName[5], monthName[6], monthName[7]],\r\n    datasets: [\r\n      {\r\n        label: 'Recovered',\r\n        backgroundColor: 'rgb(22, 229, 163)',\r\n        borderColor: 'rgb(22, 213, 163)',\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: 'rgb(22, 183, 118)',\r\n        hoverBorderColor: 'rgb(22, 183, 96)',\r\n        data: [0, 0, 0, 0, 0, 0, 0]\r\n      }\r\n    ]\r\n  });\r\n\r\n  if (month === 8) {\r\n    monthName = [\r\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug'\r\n    ]\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function GetApiData() {\r\n      text = text.toLowerCase();\r\n      country = text.charAt(0).toUpperCase() + text.slice(1);\r\n      if (country === \"United kingdom\" || country === \"Uk\") {\r\n        country = \"United Kingdom\"\r\n      }\r\n      else if (country === \"United arab emirates\" || country === \"Uae\" || country === \"United arab Emirates\" || country === \"United Arab emirates\") {\r\n        country = \"United Arab Emirates\"\r\n      }\r\n      else if (country === \"United states\" || country === \"Usa\" || country === \"Us\") {\r\n        country = \"US\"\r\n      }\r\n      if (month === 0) {\r\n        // usingDate = 29\r\n        month = 12\r\n        year = year - 1\r\n      }\r\n      if (value === \"global\") {\r\n        setError(``);\r\n        setAbility(true)\r\n        setLoading(\"Loading ....\")\r\n        setDataR({\r\n          labels: [monthName[0], monthName[1], monthName[2], monthName[3], monthName[4], monthName[5], monthName[6], monthName[7]],\r\n          datasets: [\r\n            {\r\n              label: 'Deaths',\r\n              backgroundColor: 'rgba(255,99,132,0.2)',\r\n              borderColor: 'rgba(255,99,132,1)',\r\n              borderWidth: 1,\r\n              hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n              hoverBorderColor: 'rgba(255,99,132,1)',\r\n              data: [0, 0, 0, 0, 0, 0, 0]\r\n            },\r\n            {\r\n              label: 'Recovered',\r\n              backgroundColor: 'rgb(22, 229, 163)',\r\n              borderColor: 'rgb(22, 213, 163)',\r\n              borderWidth: 1,\r\n              hoverBackgroundColor: 'rgb(22, 183, 118)',\r\n              hoverBorderColor: 'rgb(22, 183, 96)',\r\n              data: [0, 0, 0, 0, 0, 0, 0]\r\n            },\r\n            {\r\n              label: 'Confirmed',\r\n              backgroundColor: 'rgb(16, 174, 183)',\r\n              borderColor: 'rgb(0, 156, 234)',\r\n              borderWidth: 1,\r\n              hoverBackgroundColor: 'rgb(0, 199, 218)',\r\n              hoverBorderColor: 'rgb(36, 174, 206)',\r\n              data: [0, 0, 0, 0, 0, 0, 0]\r\n            }\r\n          ]\r\n        })\r\n        title = \"Global Stats\"\r\n        if (month < 10) {\r\n          if (usingDate < 10) {\r\n            dateDash = dateDash\r\n          }\r\n          else if (usingDate >= 10) {\r\n            dateDash = \"-\"\r\n          }\r\n          try {\r\n            const res = await fetch(\"https://covid-19-statistics.p.rapidapi.com/reports/total?date=\" + year + \"-0\" + month-- + dateDash + usingDate, {\r\n              \"method\": \"GET\",\r\n              \"headers\": {\r\n                \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n                \"x-rapidapi-host\": \"covid-19-statistics.p.rapidapi.com\"\r\n              }\r\n            })\r\n            apiData[dataIndex] = await res.json()\r\n            dataDeaths[dataIndex] = apiData[dataIndex].data.deaths\r\n            dataConfirmed[dataIndex] = apiData[dataIndex].data.confirmed\r\n            dataRecovered[dataIndex] = apiData[dataIndex].data.recovered\r\n          }\r\n          catch {\r\n            setError(`Something went wrong, Maybe Internet Connection Failed`);\r\n          }\r\n        }\r\n        else {\r\n          if (usingDate < 10) {\r\n            dateDash = \"-0\"\r\n          }\r\n          else if (usingDate >= 10) {\r\n            dateDash = \"-\"\r\n          }\r\n          try {\r\n            const res = await fetch(\"https://covid-19-statistics.p.rapidapi.com/reports/total?date=\" + year + \"-\" + month-- + dateDash + usingDate, {\r\n              \"method\": \"GET\",\r\n              \"headers\": {\r\n                \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n                \"x-rapidapi-host\": \"covid-19-statistics.p.rapidapi.com\"\r\n              }\r\n            })\r\n            apiData[dataIndex] = await res.json()\r\n            dataDeaths[dataIndex] = apiData[dataIndex].data.deaths\r\n            dataConfirmed[dataIndex] = apiData[dataIndex].data.confirmed\r\n            dataRecovered[dataIndex] = apiData[dataIndex].data.recovered\r\n          }\r\n          catch {\r\n            setError(`Something went wrong, Maybe Internet Connection Failed`);\r\n          }\r\n        }\r\n        --dataIndex;\r\n        if (dataIndex >= 0) {\r\n          try {\r\n            GetApiData()\r\n          }\r\n          catch { }\r\n        }\r\n        else {\r\n          setAbility(false)\r\n          setLoading(\"\")\r\n          dataIndex = 7\r\n          month = date.getMonth() + 1\r\n          year = date.getFullYear();\r\n          setDataR({\r\n            labels: [monthName[0], monthName[1], monthName[2], monthName[3], monthName[4], monthName[5], monthName[6], monthName[7]],\r\n            datasets: [\r\n              {\r\n                label: 'Deaths',\r\n                backgroundColor: 'rgba(255,99,132,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                hoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: [dataDeaths[0], dataDeaths[1], dataDeaths[2], dataDeaths[3], dataDeaths[4], dataDeaths[5], dataDeaths[6], dataDeaths[7]]\r\n              },\r\n              {\r\n                label: 'Recovered',\r\n                backgroundColor: 'rgb(22, 229, 163)',\r\n                borderColor: 'rgb(22, 213, 163)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgb(22, 183, 118)',\r\n                hoverBorderColor: 'rgb(22, 183, 96)',\r\n                data: [dataRecovered[0], dataRecovered[1], dataRecovered[2], dataRecovered[3], dataRecovered[4], dataRecovered[5], dataRecovered[6], dataRecovered[7]]\r\n              },\r\n              {\r\n                label: 'Confirmed',\r\n                backgroundColor: 'rgb(16, 174, 183)',\r\n                borderColor: 'rgb(0, 156, 234)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgb(0, 199, 218)',\r\n                hoverBorderColor: 'rgb(36, 174, 206)',\r\n                data: [dataConfirmed[0], dataConfirmed[1], dataConfirmed[2], dataConfirmed[3], dataConfirmed[4], dataConfirmed[5], dataConfirmed[6], dataConfirmed[7]]\r\n              }\r\n            ]\r\n          })\r\n          return 0\r\n        }\r\n      }\r\n      else if (value === \"country\") {\r\n        setError(``);\r\n        setAbility(true)\r\n        setLoading(\"Loading ....\")\r\n        setDataR({\r\n          labels: [monthName[0], monthName[1], monthName[2], monthName[3], monthName[4], monthName[5], monthName[6], monthName[7]],\r\n          datasets: [\r\n            {\r\n              label: 'Deaths',\r\n              backgroundColor: 'rgba(255,99,132,0.2)',\r\n              borderColor: 'rgba(255,99,132,1)',\r\n              borderWidth: 1,\r\n              hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n              hoverBorderColor: 'rgba(255,99,132,1)',\r\n              data: [0, 0, 0, 0, 0, 0, 0]\r\n            },\r\n            {\r\n              label: 'Recovered',\r\n              backgroundColor: 'rgb(22, 229, 163)',\r\n              borderColor: 'rgb(22, 213, 163)',\r\n              borderWidth: 1,\r\n              hoverBackgroundColor: 'rgb(22, 183, 118)',\r\n              hoverBorderColor: 'rgb(22, 183, 96)',\r\n              data: [0, 0, 0, 0, 0, 0, 0]\r\n            },\r\n            {\r\n              label: 'Confirmed',\r\n              backgroundColor: 'rgb(16, 174, 183)',\r\n              borderColor: 'rgb(0, 156, 234)',\r\n              borderWidth: 1,\r\n              hoverBackgroundColor: 'rgb(0, 199, 218)',\r\n              hoverBorderColor: 'rgb(36, 174, 206)',\r\n              data: [0, 0, 0, 0, 0, 0, 0]\r\n            }\r\n          ]\r\n        })\r\n        title = text.toUpperCase()\r\n        if (month < 10) {\r\n          if (usingDate < 10) {\r\n            dateDash = \"-0\"\r\n          }\r\n          else if (usingDate >= 10) {\r\n            dateDash = \"-\"\r\n          }\r\n          try {\r\n            try {\r\n              const resConf = await fetch(\"https://covid-193.p.rapidapi.com/history?country=\" + country + \"&day=\" + year + \"-0\" + month-- + dateDash + usingDate, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                  \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n                  \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\"\r\n                }\r\n              })\r\n              const countryResConf = await resConf.json()\r\n              dataConfirmed[dataIndex] = countryResConf.response[0].cases.total\r\n              dataRecovered[dataIndex] = countryResConf.response[0].cases.recovered\r\n              dataDeaths[dataIndex] = countryResConf.response[0].deaths.total\r\n            }\r\n            catch {\r\n              setError(`Something went wrong, Maybe Internet Connection Failed`);\r\n            }\r\n          }\r\n          catch { }\r\n        }\r\n        else {\r\n          try {\r\n            try {\r\n              const resConf = await fetch(\"https://covid-193.p.rapidapi.com/history?country=\" + country + \"&day=\" +  year + \"-\" + month-- + dateDash + usingDate, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                  \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n                  \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\"\r\n                }\r\n              })\r\n              const countryResConf = await resConf.json()\r\n              dataConfirmed[dataIndex] = countryResConf.response[0].cases.total\r\n              dataRecovered[dataIndex] = countryResConf.response[0].cases.recovered\r\n              dataDeaths[dataIndex] = countryResConf.response[0].deaths.total\r\n            }\r\n            catch {\r\n              setError(`Something went wrong, \r\n                    Maybe Internet Connection Failed`);\r\n            }\r\n          }\r\n          catch { }\r\n        }\r\n        --dataIndex;\r\n        if (dataIndex >= 0) {\r\n          try {\r\n            GetApiData()\r\n          }\r\n          catch { }\r\n        }\r\n        else {\r\n          setAbility(false)\r\n          setLoading(\"\")\r\n          dataIndex = 7\r\n          month = date.getMonth() + 1\r\n          year = date.getFullYear();\r\n          setDataR({\r\n            labels: [monthName[0], monthName[1], monthName[2], monthName[3], monthName[4], monthName[5], monthName[6], monthName[7]],\r\n            datasets: [\r\n              {\r\n                label: 'Deaths',\r\n                backgroundColor: 'rgba(255,99,132,0.2)',\r\n                borderColor: 'rgba(255,99,132,1)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                hoverBorderColor: 'rgba(255,99,132,1)',\r\n                data: [dataDeaths[0], dataDeaths[1], dataDeaths[2], dataDeaths[3], dataDeaths[4], dataDeaths[5], dataDeaths[6], dataDeaths[7]]\r\n              },\r\n              {\r\n                label: 'Recovered',\r\n                backgroundColor: 'rgb(22, 229, 163)',\r\n                borderColor: 'rgb(22, 213, 163)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgb(22, 183, 118)',\r\n                hoverBorderColor: 'rgb(22, 183, 96)',\r\n                data: [dataRecovered[0], dataRecovered[1], dataRecovered[2], dataRecovered[3], dataRecovered[4], dataRecovered[5], dataRecovered[6], dataRecovered[7]]\r\n              },\r\n              {\r\n                label: 'Confirmed',\r\n                backgroundColor: 'rgb(16, 174, 183)',\r\n                borderColor: 'rgb(0, 156, 234)',\r\n                borderWidth: 1,\r\n                hoverBackgroundColor: 'rgb(0, 199, 218)',\r\n                hoverBorderColor: 'rgb(36, 174, 206)',\r\n                data: [dataConfirmed[0], dataConfirmed[1], dataConfirmed[2], dataConfirmed[3], dataConfirmed[4], dataConfirmed[5], dataConfirmed[6], dataConfirmed[7]]\r\n              }\r\n            ]\r\n          })\r\n          return 0\r\n        }\r\n      }\r\n    }\r\n    GetApiData()\r\n  }, [value, text])\r\n  return (\r\n    <div>\r\n      <FormControl component=\"fieldset\" style={{ color: \"White\" }}>\r\n        <FormLabel component=\"legend\" style={{ color: \"White\", display: \"inline-block\" }}>Data: </FormLabel>\r\n        <RadioGroup aria-label=\"statsOptions\" name=\"statsOptions\" value={value} onChange={handleChange} style={{ color: \"White\", display: \"inline-block\" }}>\r\n          <FormControlLabel value=\"global\" control={<Radio />} label=\"Global Data\" disabled={ability} style={{ color: \"White\" }} />\r\n          <FormControlLabel value=\"country\" control={<Radio />} label=\"Country\" disabled={ability} style={{ color: \"White\" }} />\r\n        </RadioGroup>\r\n      </FormControl>\r\n      <h1 style={{ color: \"White\", textAlign: \"center\" }}>{title}</h1>\r\n      <h4 style={{ color: \"White\" }}>Date: {usingDate}</h4>\r\n      <h4 style={{ color: \"White\", textAlign: \"center\", color: \"green\" }}>{Loading}</h4>\r\n      <h4 style={{ textAlign: \"center\", color: \"red\" }}>{error}</h4>\r\n      <Bar height=\"100\" data={dataR} />\r\n      <Bar height=\"80\" />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GraphStats from './GraphStats'\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\n// ISO 3166-1 alpha-2\r\n// ⚠️ No support for IE 11\r\nfunction countryToFlag(isoCode) {\r\n  return typeof String.fromCodePoint !== 'undefined'\r\n    ? isoCode\r\n      .toUpperCase()\r\n      .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\r\n    : isoCode;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  option: {\r\n    fontSize: 15,\r\n    '& > span': {\r\n      marginRight: 10,\r\n      fontSize: 18,\r\n    },\r\n  },\r\n});\r\n\r\nexport default function GraphSearch(props) {\r\n  const [textChange, setText] = React.useState(\"Pakistan\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={(event) => {\r\n        event.preventDefault();\r\n        setText(document.getElementById('country-select-demo').value);\r\n        return <GraphStats text={textChange} />\r\n      }}>\r\n        <Autocomplete\r\n          id=\"country-select-demo\"\r\n          style={{ width: 300 }}\r\n          options={countries}\r\n          classes={{\r\n            option: classes.option,\r\n          }}\r\n          autoHighlight\r\n          getOptionLabel={(option) => option.label}\r\n          renderOption={(option) => (\r\n            <React.Fragment>\r\n              <span>{countryToFlag(option.code)}</span>\r\n              {option.label} ({option.code}) +{option.phone}\r\n            </React.Fragment>\r\n          )}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Choose a country\"\r\n              variant=\"outlined\"\r\n              inputProps={{\r\n                ...params.inputProps,\r\n                autoComplete: 'new-password', // disable autocomplete and autofill\r\n              }} onChange={(e) => {\r\n                setText(e.target.value);\r\n                return <GraphStats text={textChange} />\r\n              }} />\r\n          )}\r\n        />\r\n        <button type=\"submit\">search</button>\r\n        <GraphStats text={textChange} />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\r\nconst countries = [\r\n  { code: 'AD', label: 'Andorra', phone: '376' },\r\n  { code: 'AE', label: 'United Arab Emirates', phone: '971' },\r\n  { code: 'AF', label: 'Afghanistan', phone: '93' },\r\n  { code: 'AG', label: 'Antigua and Barbuda', phone: '1-268' },\r\n  { code: 'AI', label: 'Anguilla', phone: '1-264' },\r\n  { code: 'AL', label: 'Albania', phone: '355' },\r\n  { code: 'AM', label: 'Armenia', phone: '374' },\r\n  { code: 'AO', label: 'Angola', phone: '244' },\r\n  { code: 'AQ', label: 'Antarctica', phone: '672' },\r\n  { code: 'AR', label: 'Argentina', phone: '54' },\r\n  { code: 'AS', label: 'American Samoa', phone: '1-684' },\r\n  { code: 'AT', label: 'Austria', phone: '43' },\r\n  { code: 'AU', label: 'Australia', phone: '61', suggested: true },\r\n  { code: 'AW', label: 'Aruba', phone: '297' },\r\n  { code: 'AX', label: 'Alland Islands', phone: '358' },\r\n  { code: 'AZ', label: 'Azerbaijan', phone: '994' },\r\n  { code: 'BA', label: 'Bosnia and Herzegovina', phone: '387' },\r\n  { code: 'BB', label: 'Barbados', phone: '1-246' },\r\n  { code: 'BD', label: 'Bangladesh', phone: '880' },\r\n  { code: 'BE', label: 'Belgium', phone: '32' },\r\n  { code: 'BF', label: 'Burkina Faso', phone: '226' },\r\n  { code: 'BG', label: 'Bulgaria', phone: '359' },\r\n  { code: 'BH', label: 'Bahrain', phone: '973' },\r\n  { code: 'BI', label: 'Burundi', phone: '257' },\r\n  { code: 'BJ', label: 'Benin', phone: '229' },\r\n  { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\r\n  { code: 'BM', label: 'Bermuda', phone: '1-441' },\r\n  { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\r\n  { code: 'BO', label: 'Bolivia', phone: '591' },\r\n  { code: 'BR', label: 'Brazil', phone: '55' },\r\n  { code: 'BS', label: 'Bahamas', phone: '1-242' },\r\n  { code: 'BT', label: 'Bhutan', phone: '975' },\r\n  { code: 'BV', label: 'Bouvet Island', phone: '47' },\r\n  { code: 'BW', label: 'Botswana', phone: '267' },\r\n  { code: 'BY', label: 'Belarus', phone: '375' },\r\n  { code: 'BZ', label: 'Belize', phone: '501' },\r\n  { code: 'CA', label: 'Canada', phone: '1', suggested: true },\r\n  { code: 'CC', label: 'Cocos (Keeling) Islands', phone: '61' },\r\n  { code: 'CD', label: 'Congo, Democratic Republic of the', phone: '243' },\r\n  { code: 'CF', label: 'Central African Republic', phone: '236' },\r\n  { code: 'CG', label: 'Congo, Republic of the', phone: '242' },\r\n  { code: 'CH', label: 'Switzerland', phone: '41' },\r\n  { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\r\n  { code: 'CK', label: 'Cook Islands', phone: '682' },\r\n  { code: 'CL', label: 'Chile', phone: '56' },\r\n  { code: 'CM', label: 'Cameroon', phone: '237' },\r\n  { code: 'CN', label: 'China', phone: '86' },\r\n  { code: 'CO', label: 'Colombia', phone: '57' },\r\n  { code: 'CR', label: 'Costa Rica', phone: '506' },\r\n  { code: 'CU', label: 'Cuba', phone: '53' },\r\n  { code: 'CV', label: 'Cape Verde', phone: '238' },\r\n  { code: 'CW', label: 'Curacao', phone: '599' },\r\n  { code: 'CX', label: 'Christmas Island', phone: '61' },\r\n  { code: 'CY', label: 'Cyprus', phone: '357' },\r\n  { code: 'CZ', label: 'Czech Republic', phone: '420' },\r\n  { code: 'DE', label: 'Germany', phone: '49', suggested: true },\r\n  { code: 'DJ', label: 'Djibouti', phone: '253' },\r\n  { code: 'DK', label: 'Denmark', phone: '45' },\r\n  { code: 'DM', label: 'Dominica', phone: '1-767' },\r\n  { code: 'DO', label: 'Dominican Republic', phone: '1-809' },\r\n  { code: 'DZ', label: 'Algeria', phone: '213' },\r\n  { code: 'EC', label: 'Ecuador', phone: '593' },\r\n  { code: 'EE', label: 'Estonia', phone: '372' },\r\n  { code: 'EG', label: 'Egypt', phone: '20' },\r\n  { code: 'EH', label: 'Western Sahara', phone: '212' },\r\n  { code: 'ER', label: 'Eritrea', phone: '291' },\r\n  { code: 'ES', label: 'Spain', phone: '34' },\r\n  { code: 'ET', label: 'Ethiopia', phone: '251' },\r\n  { code: 'FI', label: 'Finland', phone: '358' },\r\n  { code: 'FJ', label: 'Fiji', phone: '679' },\r\n  { code: 'FK', label: 'Falkland Islands (Malvinas)', phone: '500' },\r\n  { code: 'FM', label: 'Micronesia, Federated States of', phone: '691' },\r\n  { code: 'FO', label: 'Faroe Islands', phone: '298' },\r\n  { code: 'FR', label: 'France', phone: '33', suggested: true },\r\n  { code: 'GA', label: 'Gabon', phone: '241' },\r\n  { code: 'GB', label: 'United Kingdom', phone: '44' },\r\n  { code: 'GD', label: 'Grenada', phone: '1-473' },\r\n  { code: 'GE', label: 'Georgia', phone: '995' },\r\n  { code: 'GF', label: 'French Guiana', phone: '594' },\r\n  { code: 'GG', label: 'Guernsey', phone: '44' },\r\n  { code: 'GH', label: 'Ghana', phone: '233' },\r\n  { code: 'GI', label: 'Gibraltar', phone: '350' },\r\n  { code: 'GL', label: 'Greenland', phone: '299' },\r\n  { code: 'GM', label: 'Gambia', phone: '220' },\r\n  { code: 'GN', label: 'Guinea', phone: '224' },\r\n  { code: 'GP', label: 'Guadeloupe', phone: '590' },\r\n  { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\r\n  { code: 'GR', label: 'Greece', phone: '30' },\r\n  { code: 'GS', label: 'South Georgia and the South Sandwich Islands', phone: '500' },\r\n  { code: 'GT', label: 'Guatemala', phone: '502' },\r\n  { code: 'GU', label: 'Guam', phone: '1-671' },\r\n  { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\r\n  { code: 'GY', label: 'Guyana', phone: '592' },\r\n  { code: 'HK', label: 'Hong Kong', phone: '852' },\r\n  { code: 'HM', label: 'Heard Island and McDonald Islands', phone: '672' },\r\n  { code: 'HN', label: 'Honduras', phone: '504' },\r\n  { code: 'HR', label: 'Croatia', phone: '385' },\r\n  { code: 'HT', label: 'Haiti', phone: '509' },\r\n  { code: 'HU', label: 'Hungary', phone: '36' },\r\n  { code: 'ID', label: 'Indonesia', phone: '62' },\r\n  { code: 'IE', label: 'Ireland', phone: '353' },\r\n  { code: 'IL', label: 'Israel', phone: '972' },\r\n  { code: 'IM', label: 'Isle of Man', phone: '44' },\r\n  { code: 'IN', label: 'India', phone: '91' },\r\n  { code: 'IO', label: 'British Indian Ocean Territory', phone: '246' },\r\n  { code: 'IQ', label: 'Iraq', phone: '964' },\r\n  { code: 'IR', label: 'Iran, Islamic Republic of', phone: '98' },\r\n  { code: 'IS', label: 'Iceland', phone: '354' },\r\n  { code: 'IT', label: 'Italy', phone: '39' },\r\n  { code: 'JE', label: 'Jersey', phone: '44' },\r\n  { code: 'JM', label: 'Jamaica', phone: '1-876' },\r\n  { code: 'JO', label: 'Jordan', phone: '962' },\r\n  { code: 'JP', label: 'Japan', phone: '81', suggested: true },\r\n  { code: 'KE', label: 'Kenya', phone: '254' },\r\n  { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\r\n  { code: 'KH', label: 'Cambodia', phone: '855' },\r\n  { code: 'KI', label: 'Kiribati', phone: '686' },\r\n  { code: 'KM', label: 'Comoros', phone: '269' },\r\n  { code: 'KN', label: 'Saint Kitts and Nevis', phone: '1-869' },\r\n  { code: 'KP', label: \"Korea, Democratic People's Republic of\", phone: '850' },\r\n  { code: 'KR', label: 'Korea, Republic of', phone: '82' },\r\n  { code: 'KW', label: 'Kuwait', phone: '965' },\r\n  { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\r\n  { code: 'KZ', label: 'Kazakhstan', phone: '7' },\r\n  { code: 'LA', label: \"Lao People's Democratic Republic\", phone: '856' },\r\n  { code: 'LB', label: 'Lebanon', phone: '961' },\r\n  { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\r\n  { code: 'LI', label: 'Liechtenstein', phone: '423' },\r\n  { code: 'LK', label: 'Sri Lanka', phone: '94' },\r\n  { code: 'LR', label: 'Liberia', phone: '231' },\r\n  { code: 'LS', label: 'Lesotho', phone: '266' },\r\n  { code: 'LT', label: 'Lithuania', phone: '370' },\r\n  { code: 'LU', label: 'Luxembourg', phone: '352' },\r\n  { code: 'LV', label: 'Latvia', phone: '371' },\r\n  { code: 'LY', label: 'Libya', phone: '218' },\r\n  { code: 'MA', label: 'Morocco', phone: '212' },\r\n  { code: 'MC', label: 'Monaco', phone: '377' },\r\n  { code: 'MD', label: 'Moldova, Republic of', phone: '373' },\r\n  { code: 'ME', label: 'Montenegro', phone: '382' },\r\n  { code: 'MF', label: 'Saint Martin (French part)', phone: '590' },\r\n  { code: 'MG', label: 'Madagascar', phone: '261' },\r\n  { code: 'MH', label: 'Marshall Islands', phone: '692' },\r\n  { code: 'MK', label: 'Macedonia, the Former Yugoslav Republic of', phone: '389' },\r\n  { code: 'ML', label: 'Mali', phone: '223' },\r\n  { code: 'MM', label: 'Myanmar', phone: '95' },\r\n  { code: 'MN', label: 'Mongolia', phone: '976' },\r\n  { code: 'MO', label: 'Macao', phone: '853' },\r\n  { code: 'MP', label: 'Northern Mariana Islands', phone: '1-670' },\r\n  { code: 'MQ', label: 'Martinique', phone: '596' },\r\n  { code: 'MR', label: 'Mauritania', phone: '222' },\r\n  { code: 'MS', label: 'Montserrat', phone: '1-664' },\r\n  { code: 'MT', label: 'Malta', phone: '356' },\r\n  { code: 'MU', label: 'Mauritius', phone: '230' },\r\n  { code: 'MV', label: 'Maldives', phone: '960' },\r\n  { code: 'MW', label: 'Malawi', phone: '265' },\r\n  { code: 'MX', label: 'Mexico', phone: '52' },\r\n  { code: 'MY', label: 'Malaysia', phone: '60' },\r\n  { code: 'MZ', label: 'Mozambique', phone: '258' },\r\n  { code: 'NA', label: 'Namibia', phone: '264' },\r\n  { code: 'NC', label: 'New Caledonia', phone: '687' },\r\n  { code: 'NE', label: 'Niger', phone: '227' },\r\n  { code: 'NF', label: 'Norfolk Island', phone: '672' },\r\n  { code: 'NG', label: 'Nigeria', phone: '234' },\r\n  { code: 'NI', label: 'Nicaragua', phone: '505' },\r\n  { code: 'NL', label: 'Netherlands', phone: '31' },\r\n  { code: 'NO', label: 'Norway', phone: '47' },\r\n  { code: 'NP', label: 'Nepal', phone: '977' },\r\n  { code: 'NR', label: 'Nauru', phone: '674' },\r\n  { code: 'NU', label: 'Niue', phone: '683' },\r\n  { code: 'NZ', label: 'New Zealand', phone: '64' },\r\n  { code: 'OM', label: 'Oman', phone: '968' },\r\n  { code: 'PA', label: 'Panama', phone: '507' },\r\n  { code: 'PE', label: 'Peru', phone: '51' },\r\n  { code: 'PF', label: 'French Polynesia', phone: '689' },\r\n  { code: 'PG', label: 'Papua New Guinea', phone: '675' },\r\n  { code: 'PH', label: 'Philippines', phone: '63' },\r\n  { code: 'PK', label: 'Pakistan', phone: '92' },\r\n  { code: 'PL', label: 'Poland', phone: '48' },\r\n  { code: 'PM', label: 'Saint Pierre and Miquelon', phone: '508' },\r\n  { code: 'PN', label: 'Pitcairn', phone: '870' },\r\n  { code: 'PR', label: 'Puerto Rico', phone: '1' },\r\n  { code: 'PS', label: 'Palestine, State of', phone: '970' },\r\n  { code: 'PT', label: 'Portugal', phone: '351' },\r\n  { code: 'PW', label: 'Palau', phone: '680' },\r\n  { code: 'PY', label: 'Paraguay', phone: '595' },\r\n  { code: 'QA', label: 'Qatar', phone: '974' },\r\n  { code: 'RE', label: 'Reunion', phone: '262' },\r\n  { code: 'RO', label: 'Romania', phone: '40' },\r\n  { code: 'RS', label: 'Serbia', phone: '381' },\r\n  { code: 'RU', label: 'Russian Federation', phone: '7' },\r\n  { code: 'RW', label: 'Rwanda', phone: '250' },\r\n  { code: 'SA', label: 'Saudi Arabia', phone: '966' },\r\n  { code: 'SB', label: 'Solomon Islands', phone: '677' },\r\n  { code: 'SC', label: 'Seychelles', phone: '248' },\r\n  { code: 'SD', label: 'Sudan', phone: '249' },\r\n  { code: 'SE', label: 'Sweden', phone: '46' },\r\n  { code: 'SG', label: 'Singapore', phone: '65' },\r\n  { code: 'SH', label: 'Saint Helena', phone: '290' },\r\n  { code: 'SI', label: 'Slovenia', phone: '386' },\r\n  { code: 'SJ', label: 'Svalbard and Jan Mayen', phone: '47' },\r\n  { code: 'SK', label: 'Slovakia', phone: '421' },\r\n  { code: 'SL', label: 'Sierra Leone', phone: '232' },\r\n  { code: 'SM', label: 'San Marino', phone: '378' },\r\n  { code: 'SN', label: 'Senegal', phone: '221' },\r\n  { code: 'SO', label: 'Somalia', phone: '252' },\r\n  { code: 'SR', label: 'Suriname', phone: '597' },\r\n  { code: 'SS', label: 'South Sudan', phone: '211' },\r\n  { code: 'ST', label: 'Sao Tome and Principe', phone: '239' },\r\n  { code: 'SV', label: 'El Salvador', phone: '503' },\r\n  { code: 'SX', label: 'Sint Maarten (Dutch part)', phone: '1-721' },\r\n  { code: 'SY', label: 'Syrian Arab Republic', phone: '963' },\r\n  { code: 'SZ', label: 'Swaziland', phone: '268' },\r\n  { code: 'TC', label: 'Turks and Caicos Islands', phone: '1-649' },\r\n  { code: 'TD', label: 'Chad', phone: '235' },\r\n  { code: 'TF', label: 'French Southern Territories', phone: '262' },\r\n  { code: 'TG', label: 'Togo', phone: '228' },\r\n  { code: 'TH', label: 'Thailand', phone: '66' },\r\n  { code: 'TJ', label: 'Tajikistan', phone: '992' },\r\n  { code: 'TK', label: 'Tokelau', phone: '690' },\r\n  { code: 'TL', label: 'Timor-Leste', phone: '670' },\r\n  { code: 'TM', label: 'Turkmenistan', phone: '993' },\r\n  { code: 'TN', label: 'Tunisia', phone: '216' },\r\n  { code: 'TO', label: 'Tonga', phone: '676' },\r\n  { code: 'TR', label: 'Turkey', phone: '90' },\r\n  { code: 'TT', label: 'Trinidad and Tobago', phone: '1-868' },\r\n  { code: 'TV', label: 'Tuvalu', phone: '688' },\r\n  { code: 'TW', label: 'Taiwan, Province of China', phone: '886' },\r\n  { code: 'TZ', label: 'United Republic of Tanzania', phone: '255' },\r\n  { code: 'UA', label: 'Ukraine', phone: '380' },\r\n  { code: 'UG', label: 'Uganda', phone: '256' },\r\n  { code: 'US', label: 'United States', phone: '1', suggested: true },\r\n  { code: 'UY', label: 'Uruguay', phone: '598' },\r\n  { code: 'UZ', label: 'Uzbekistan', phone: '998' },\r\n  { code: 'VA', label: 'Holy See (Vatican City State)', phone: '379' },\r\n  { code: 'VC', label: 'Saint Vincent and the Grenadines', phone: '1-784' },\r\n  { code: 'VE', label: 'Venezuela', phone: '58' },\r\n  { code: 'VG', label: 'British Virgin Islands', phone: '1-284' },\r\n  { code: 'VI', label: 'US Virgin Islands', phone: '1-340' },\r\n  { code: 'VN', label: 'Vietnam', phone: '84' },\r\n  { code: 'VU', label: 'Vanuatu', phone: '678' },\r\n  { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\r\n  { code: 'WS', label: 'Samoa', phone: '685' },\r\n  { code: 'XK', label: 'Kosovo', phone: '383' },\r\n  { code: 'YE', label: 'Yemen', phone: '967' },\r\n  { code: 'YT', label: 'Mayotte', phone: '262' },\r\n  { code: 'ZA', label: 'South Africa', phone: '27' },\r\n  { code: 'ZM', label: 'Zambia', phone: '260' },\r\n  { code: 'ZW', label: 'Zimbabwe', phone: '263' },\r\n];\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { firebaseConfig } from '../firebase-config'\r\n\r\nlet bigDataCountry = \"none\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1000,\r\n    margin: '0 auto',\r\n    marginTop: 50,\r\n    height: 1000\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    wordWrap: 'breakWord'\r\n  },\r\n}));\r\nlet checker = 'incomplete';\r\nexport default function AllCountries({ text, userId }) {\r\n  const [covidData, setCovidData] = useState({});\r\n  const [totalData, setTotalData] = useState({});\r\n  const [Loading, setLoading] = React.useState('');\r\n  const [invalidText, setInvalidText] = React.useState('');\r\n  let data;\r\n  let country\r\n  async function GetAPi() {\r\n    const resq = await fetch('https://api.ipify.org?format=json')\r\n    const resApi = await resq.json()\r\n    const res2 = await fetch('https://extreme-ip-lookup.com/json/')\r\n    const getCountry = await res2.json()\r\n    text = getCountry.country\r\n\r\n    if (checker === 'incomplete') {\r\n      const user = {\r\n        ip: resApi.ip,\r\n        loc: getCountry\r\n      }\r\n      firebaseConfig.database().ref('/userid' + (userId)).update(user)\r\n      checker = 'complete'\r\n    }\r\n    else {\r\n      return\r\n    }\r\n  }\r\n  GetAPi();\r\n  useEffect(() => {\r\n    async function getData() {\r\n      setLoading(<img alt=\"Loading\" src=\"https://images.squarespace-cdn.com/content/v1/5c6c465377889723ef956c9c/1550783471043-359YMMSMZIVV26DVY53E/ke17ZwdGBToddI8pDm48kJ2qNPoyi7ZzABItbu6s8sNZw-zPPgdn4jUwVcJE1ZvWhcwhEtWJXoshNdA9f1qD7UmFirIhnfOLi74fyVphn1aiKi4I-UYyejs7p5Cj_dRo_HEJWfYW9eKDr9nyb3YnuQ/globe-earth-animation-15-2.gif\r\n      \"></img>)\r\n      setCovidData(\"\");\r\n      text = text.toLowerCase();\r\n      country = text.charAt(0).toUpperCase() + text.slice(1);\r\n      if(bigDataCountry === \"done\"){\r\n        alert(\"Please wait, US Data will takes few seconds to remove.\")\r\n        bigDataCountry = \"none\"\r\n      }\r\n      if (country === \"United kingdom\" || country === \"Uk\") {\r\n        country = \"United Kingdom\"\r\n      }\r\n      else if (country === \"United arab emirates\" || country === \"Uae\" || country === \"United arab Emirates\" || country === \"United Arab emirates\") {\r\n        country = \"United Arab Emirates\"\r\n      }\r\n      else if (country === \"United states\" || country === \"Usa\" || country === \"Us\") {\r\n        country = \"US\"\r\n      }\r\n      const res1 = await fetch(\"https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/total?country=\" + country, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n          \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\"\r\n        }\r\n      })\r\n      const totalCases = await res1.json()\r\n      if(totalCases.data.location === \"Global\"){\r\n        setTotalData(\"\")\r\n        setCovidData(\"\")\r\n        setInvalidText(\"Above Country not found\")\r\n        setLoading(\"\")\r\n        return\r\n      }\r\n      setTotalData(totalCases.data);\r\n      const res = await fetch(\"https://covid-19-coronavirus-statistics.p.rapidapi.com/v1/stats?country=\" + country, {\r\n        \"method\": \"GET\",\r\n        \"headers\": {\r\n          \"x-rapidapi-key\": \"008f2c29aamshe451c7d286c4d43p1fc2a8jsna64e71f494d5\",\r\n          \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\"\r\n        }\r\n      })\r\n      data = await res.json()\r\n      if(!data.data.covid19Stats.length){\r\n        return setLoading(\r\n          <img alt=\"Loading\" src=\"https://images.squarespace-cdn.com/content/v1/5c6c465377889723ef956c9c/1550783471043-359YMMSMZIVV26DVY53E/ke17ZwdGBToddI8pDm48kJ2qNPoyi7ZzABItbu6s8sNZw-zPPgdn4jUwVcJE1ZvWhcwhEtWJXoshNdA9f1qD7UmFirIhnfOLi74fyVphn1aiKi4I-UYyejs7p5Cj_dRo_HEJWfYW9eKDr9nyb3YnuQ/globe-earth-animation-15-2.gif\r\n        \"></img>\r\n        )\r\n      }\r\n      setLoading()\r\n      setCovidData(data.data.covid19Stats);\r\n    }\r\n    getData()\r\n  }, [text])\r\n\r\n  const classes = useStyles();\r\n  let color = \"white\"\r\n  let title;\r\n  return (\r\n    <div className={classes.root}>\r\n      <h2 style={{ textAlign: 'center', color: '#fff' }}>{text.charAt(0).toUpperCase() + text.slice(1)}</h2>\r\n      <h3 style={{color:\"red\", textAlign:\"center\"}}>{invalidText}</h3>\r\n      <Grid container spacing={3}>\r\n        {Object.keys(totalData).map((key, ind) => {\r\n          if (key.toUpperCase() === \"CONFIRMED\") {\r\n            color = \"DodgerBlue\"\r\n          }\r\n          else if (key.toUpperCase() === \"RECOVERED\") {\r\n            color = \"#228B22\"\r\n          }\r\n          if (key.toUpperCase() === \"DEATHS\") {\r\n            color = \"#FA8072\"\r\n          }\r\n          if (ind > 2) {\r\n            return\r\n          }\r\n          return (\r\n            <Grid item xs={6} sm={6} key={ind}>\r\n              <Paper className={classes.paper} style={{ color: color }} elevation={3}>\r\n                <h3>{key.toUpperCase()}</h3>\r\n                <p>{totalData[key]}</p>\r\n              </Paper>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n      <hr />\r\n      \r\n      <h2 style={{ textAlign: 'center', color: '#fff' }}>City & Province Stats</h2>\r\n      <center>{Loading}</center>\r\n      <Grid container spacing={3} id=\"gridCountry\">\r\n        {Object.keys(covidData).map((key, ind) => {\r\n          if (covidData[key].country === \"US\") {\r\n            bigDataCountry = \"done\"\r\n            title = covidData[key].city + \" of \" + covidData[key].province\r\n            if ('keyId' && key === 'lastUpdate') {\r\n              return\r\n            }\r\n            if (covidData[key].confirmed === \"confirmed\") {\r\n              color = \"DodgerBlue\"\r\n            }\r\n            else if (covidData[key].recovered === \"recovered\") {\r\n              color = \"#228B22\"\r\n            }\r\n            if (covidData[key].deaths === \"deaths\") {\r\n              color = \"#FA8072\"\r\n            }\r\n          }\r\n          else if (covidData[key].province === \"null\" && covidData[key].city === \"null\") {\r\n            return \r\n          }\r\n          else {\r\n            title = covidData[key].province            \r\n            if (key === 'city' && key === 'keyId' && key === 'lastUpdate') {\r\n              return\r\n            }\r\n            if (covidData[key].confirmed === \"confirmed\") {\r\n              color = \"DodgerBlue\"\r\n            }\r\n            else if (covidData[key].recovered === \"recovered\") {\r\n              color = \"#228B22\"\r\n            }\r\n            if (covidData[key].deaths === \"deaths\") {\r\n              color = \"#FA8072\"\r\n            }\r\n          }\r\n          return (\r\n            <Grid item xs={12} sm={4} key={ind}>\r\n              <Paper className={classes.paper} elevation={3}>\r\n                <h3>{title}</h3>\r\n                <Grid container spacing={0}>\r\n                  <Paper className={classes.paper} elevation={3} style={{ background: '#D3D3D3' }}>\r\n                    <h4 style={{ color: \"DodgerBlue\" }} > confirmed </h4>\r\n                    <p> {covidData[key].confirmed}</p>\r\n                  </Paper>\r\n                  <Paper className={classes.paper} elevation={3} style={{ background: '#D3D3D3' }}>\r\n                    <h4 style={{ color: \"#228B22\" }} > recovered </h4>\r\n                    <p> {covidData[key].recovered}</p>\r\n                  </Paper>\r\n                  <Paper className={classes.paper} elevation={3} style={{ background: '#D3D3D3' }}>\r\n                    <h4 style={{ color: \"#FA8072\" }} > deaths</h4>\r\n                    <p> {covidData[key].deaths}</p>\r\n                  </Paper>\r\n              </Grid>\r\n              </Paper>\r\n            </Grid>\r\n          )\r\n        })}\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AllCountries from './AllCountries'\r\n\r\n// ISO 3166-1 alpha-2\r\n// ⚠️ No support for IE 11\r\nfunction countryToFlag(isoCode) {\r\n  return typeof String.fromCodePoint !== 'undefined'\r\n    ? isoCode\r\n      .toUpperCase()\r\n      .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\r\n    : isoCode;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  option: {\r\n    fontSize: 15,\r\n    '& > span': {\r\n      marginRight: 10,\r\n      fontSize: 18,\r\n    },\r\n  },\r\n});\r\n\r\nexport default function SearchBar({ userId }) {\r\n  const [textChange, setText] = React.useState(\"Pakistan\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={(event) => {\r\n        event.preventDefault();\r\n        setText(document.getElementById('country-select-demo').value);\r\n        return <AllCountries text={textChange} />\r\n      }}>\r\n        <Autocomplete\r\n          id=\"country-select-demo\"\r\n          style={{ width: 300 }}\r\n          options={countries}\r\n          classes={{\r\n            option: classes.option,\r\n          }}\r\n          autoHighlight\r\n          getOptionLabel={(option) => option.label}\r\n          renderOption={(option) => (\r\n            <React.Fragment>\r\n              <span>{countryToFlag(option.code)}</span>\r\n              {option.label} ({option.code}) +{option.phone}\r\n            </React.Fragment>\r\n          )}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Choose a country\"\r\n              variant=\"outlined\"\r\n              inputProps={{\r\n                ...params.inputProps,\r\n                autoComplete: 'off', // disable autocomplete and autofill\r\n              }} onChange={(e) => {\r\n                setText(e.target.value);\r\n                return <AllCountries text={textChange} />\r\n              }} />\r\n          )}\r\n        />\r\n        <button type=\"submit\">search</button>\r\n        <AllCountries text={textChange} userId={userId} />\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\r\nconst countries = [\r\n  { code: 'AD', label: 'Andorra', phone: '376' },\r\n  { code: 'AE', label: 'United Arab Emirates', phone: '971' },\r\n  { code: 'AF', label: 'Afghanistan', phone: '93' },\r\n  { code: 'AG', label: 'Antigua and Barbuda', phone: '1-268' },\r\n  { code: 'AI', label: 'Anguilla', phone: '1-264' },\r\n  { code: 'AL', label: 'Albania', phone: '355' },\r\n  { code: 'AM', label: 'Armenia', phone: '374' },\r\n  { code: 'AO', label: 'Angola', phone: '244' },\r\n  { code: 'AQ', label: 'Antarctica', phone: '672' },\r\n  { code: 'AR', label: 'Argentina', phone: '54' },\r\n  { code: 'AS', label: 'American Samoa', phone: '1-684' },\r\n  { code: 'AT', label: 'Austria', phone: '43' },\r\n  { code: 'AU', label: 'Australia', phone: '61', suggested: true },\r\n  { code: 'AW', label: 'Aruba', phone: '297' },\r\n  { code: 'AX', label: 'Alland Islands', phone: '358' },\r\n  { code: 'AZ', label: 'Azerbaijan', phone: '994' },\r\n  { code: 'BA', label: 'Bosnia and Herzegovina', phone: '387' },\r\n  { code: 'BB', label: 'Barbados', phone: '1-246' },\r\n  { code: 'BD', label: 'Bangladesh', phone: '880' },\r\n  { code: 'BE', label: 'Belgium', phone: '32' },\r\n  { code: 'BF', label: 'Burkina Faso', phone: '226' },\r\n  { code: 'BG', label: 'Bulgaria', phone: '359' },\r\n  { code: 'BH', label: 'Bahrain', phone: '973' },\r\n  { code: 'BI', label: 'Burundi', phone: '257' },\r\n  { code: 'BJ', label: 'Benin', phone: '229' },\r\n  { code: 'BL', label: 'Saint Barthelemy', phone: '590' },\r\n  { code: 'BM', label: 'Bermuda', phone: '1-441' },\r\n  { code: 'BN', label: 'Brunei Darussalam', phone: '673' },\r\n  { code: 'BO', label: 'Bolivia', phone: '591' },\r\n  { code: 'BR', label: 'Brazil', phone: '55' },\r\n  { code: 'BS', label: 'Bahamas', phone: '1-242' },\r\n  { code: 'BT', label: 'Bhutan', phone: '975' },\r\n  { code: 'BV', label: 'Bouvet Island', phone: '47' },\r\n  { code: 'BW', label: 'Botswana', phone: '267' },\r\n  { code: 'BY', label: 'Belarus', phone: '375' },\r\n  { code: 'BZ', label: 'Belize', phone: '501' },\r\n  { code: 'CA', label: 'Canada', phone: '1', suggested: true },\r\n  { code: 'CC', label: 'Cocos (Keeling) Islands', phone: '61' },\r\n  { code: 'CD', label: 'Congo, Democratic Republic of the', phone: '243' },\r\n  { code: 'CF', label: 'Central African Republic', phone: '236' },\r\n  { code: 'CG', label: 'Congo, Republic of the', phone: '242' },\r\n  { code: 'CH', label: 'Switzerland', phone: '41' },\r\n  { code: 'CI', label: \"Cote d'Ivoire\", phone: '225' },\r\n  { code: 'CK', label: 'Cook Islands', phone: '682' },\r\n  { code: 'CL', label: 'Chile', phone: '56' },\r\n  { code: 'CM', label: 'Cameroon', phone: '237' },\r\n  { code: 'CN', label: 'China', phone: '86' },\r\n  { code: 'CO', label: 'Colombia', phone: '57' },\r\n  { code: 'CR', label: 'Costa Rica', phone: '506' },\r\n  { code: 'CU', label: 'Cuba', phone: '53' },\r\n  { code: 'CV', label: 'Cape Verde', phone: '238' },\r\n  { code: 'CW', label: 'Curacao', phone: '599' },\r\n  { code: 'CX', label: 'Christmas Island', phone: '61' },\r\n  { code: 'CY', label: 'Cyprus', phone: '357' },\r\n  { code: 'CZ', label: 'Czech Republic', phone: '420' },\r\n  { code: 'DE', label: 'Germany', phone: '49', suggested: true },\r\n  { code: 'DJ', label: 'Djibouti', phone: '253' },\r\n  { code: 'DK', label: 'Denmark', phone: '45' },\r\n  { code: 'DM', label: 'Dominica', phone: '1-767' },\r\n  { code: 'DO', label: 'Dominican Republic', phone: '1-809' },\r\n  { code: 'DZ', label: 'Algeria', phone: '213' },\r\n  { code: 'EC', label: 'Ecuador', phone: '593' },\r\n  { code: 'EE', label: 'Estonia', phone: '372' },\r\n  { code: 'EG', label: 'Egypt', phone: '20' },\r\n  { code: 'EH', label: 'Western Sahara', phone: '212' },\r\n  { code: 'ER', label: 'Eritrea', phone: '291' },\r\n  { code: 'ES', label: 'Spain', phone: '34' },\r\n  { code: 'ET', label: 'Ethiopia', phone: '251' },\r\n  { code: 'FI', label: 'Finland', phone: '358' },\r\n  { code: 'FJ', label: 'Fiji', phone: '679' },\r\n  { code: 'FK', label: 'Falkland Islands (Malvinas)', phone: '500' },\r\n  { code: 'FM', label: 'Micronesia, Federated States of', phone: '691' },\r\n  { code: 'FO', label: 'Faroe Islands', phone: '298' },\r\n  { code: 'FR', label: 'France', phone: '33', suggested: true },\r\n  { code: 'GA', label: 'Gabon', phone: '241' },\r\n  { code: 'GB', label: 'United Kingdom', phone: '44' },\r\n  { code: 'GD', label: 'Grenada', phone: '1-473' },\r\n  { code: 'GE', label: 'Georgia', phone: '995' },\r\n  { code: 'GF', label: 'French Guiana', phone: '594' },\r\n  { code: 'GG', label: 'Guernsey', phone: '44' },\r\n  { code: 'GH', label: 'Ghana', phone: '233' },\r\n  { code: 'GI', label: 'Gibraltar', phone: '350' },\r\n  { code: 'GL', label: 'Greenland', phone: '299' },\r\n  { code: 'GM', label: 'Gambia', phone: '220' },\r\n  { code: 'GN', label: 'Guinea', phone: '224' },\r\n  { code: 'GP', label: 'Guadeloupe', phone: '590' },\r\n  { code: 'GQ', label: 'Equatorial Guinea', phone: '240' },\r\n  { code: 'GR', label: 'Greece', phone: '30' },\r\n  { code: 'GS', label: 'South Georgia and the South Sandwich Islands', phone: '500' },\r\n  { code: 'GT', label: 'Guatemala', phone: '502' },\r\n  { code: 'GU', label: 'Guam', phone: '1-671' },\r\n  { code: 'GW', label: 'Guinea-Bissau', phone: '245' },\r\n  { code: 'GY', label: 'Guyana', phone: '592' },\r\n  { code: 'HK', label: 'Hong Kong', phone: '852' },\r\n  { code: 'HM', label: 'Heard Island and McDonald Islands', phone: '672' },\r\n  { code: 'HN', label: 'Honduras', phone: '504' },\r\n  { code: 'HR', label: 'Croatia', phone: '385' },\r\n  { code: 'HT', label: 'Haiti', phone: '509' },\r\n  { code: 'HU', label: 'Hungary', phone: '36' },\r\n  { code: 'ID', label: 'Indonesia', phone: '62' },\r\n  { code: 'IE', label: 'Ireland', phone: '353' },\r\n  { code: 'IL', label: 'Israel', phone: '972' },\r\n  { code: 'IM', label: 'Isle of Man', phone: '44' },\r\n  { code: 'IN', label: 'India', phone: '91' },\r\n  { code: 'IO', label: 'British Indian Ocean Territory', phone: '246' },\r\n  { code: 'IQ', label: 'Iraq', phone: '964' },\r\n  { code: 'IR', label: 'Iran, Islamic Republic of', phone: '98' },\r\n  { code: 'IS', label: 'Iceland', phone: '354' },\r\n  { code: 'IT', label: 'Italy', phone: '39' },\r\n  { code: 'JE', label: 'Jersey', phone: '44' },\r\n  { code: 'JM', label: 'Jamaica', phone: '1-876' },\r\n  { code: 'JO', label: 'Jordan', phone: '962' },\r\n  { code: 'JP', label: 'Japan', phone: '81', suggested: true },\r\n  { code: 'KE', label: 'Kenya', phone: '254' },\r\n  { code: 'KG', label: 'Kyrgyzstan', phone: '996' },\r\n  { code: 'KH', label: 'Cambodia', phone: '855' },\r\n  { code: 'KI', label: 'Kiribati', phone: '686' },\r\n  { code: 'KM', label: 'Comoros', phone: '269' },\r\n  { code: 'KN', label: 'Saint Kitts and Nevis', phone: '1-869' },\r\n  { code: 'KP', label: \"Korea, Democratic People's Republic of\", phone: '850' },\r\n  { code: 'KR', label: 'Korea, Republic of', phone: '82' },\r\n  { code: 'KW', label: 'Kuwait', phone: '965' },\r\n  { code: 'KY', label: 'Cayman Islands', phone: '1-345' },\r\n  { code: 'KZ', label: 'Kazakhstan', phone: '7' },\r\n  { code: 'LA', label: \"Lao People's Democratic Republic\", phone: '856' },\r\n  { code: 'LB', label: 'Lebanon', phone: '961' },\r\n  { code: 'LC', label: 'Saint Lucia', phone: '1-758' },\r\n  { code: 'LI', label: 'Liechtenstein', phone: '423' },\r\n  { code: 'LK', label: 'Sri Lanka', phone: '94' },\r\n  { code: 'LR', label: 'Liberia', phone: '231' },\r\n  { code: 'LS', label: 'Lesotho', phone: '266' },\r\n  { code: 'LT', label: 'Lithuania', phone: '370' },\r\n  { code: 'LU', label: 'Luxembourg', phone: '352' },\r\n  { code: 'LV', label: 'Latvia', phone: '371' },\r\n  { code: 'LY', label: 'Libya', phone: '218' },\r\n  { code: 'MA', label: 'Morocco', phone: '212' },\r\n  { code: 'MC', label: 'Monaco', phone: '377' },\r\n  { code: 'MD', label: 'Moldova, Republic of', phone: '373' },\r\n  { code: 'ME', label: 'Montenegro', phone: '382' },\r\n  { code: 'MF', label: 'Saint Martin (French part)', phone: '590' },\r\n  { code: 'MG', label: 'Madagascar', phone: '261' },\r\n  { code: 'MH', label: 'Marshall Islands', phone: '692' },\r\n  { code: 'MK', label: 'Macedonia, the Former Yugoslav Republic of', phone: '389' },\r\n  { code: 'ML', label: 'Mali', phone: '223' },\r\n  { code: 'MM', label: 'Myanmar', phone: '95' },\r\n  { code: 'MN', label: 'Mongolia', phone: '976' },\r\n  { code: 'MO', label: 'Macao', phone: '853' },\r\n  { code: 'MP', label: 'Northern Mariana Islands', phone: '1-670' },\r\n  { code: 'MQ', label: 'Martinique', phone: '596' },\r\n  { code: 'MR', label: 'Mauritania', phone: '222' },\r\n  { code: 'MS', label: 'Montserrat', phone: '1-664' },\r\n  { code: 'MT', label: 'Malta', phone: '356' },\r\n  { code: 'MU', label: 'Mauritius', phone: '230' },\r\n  { code: 'MV', label: 'Maldives', phone: '960' },\r\n  { code: 'MW', label: 'Malawi', phone: '265' },\r\n  { code: 'MX', label: 'Mexico', phone: '52' },\r\n  { code: 'MY', label: 'Malaysia', phone: '60' },\r\n  { code: 'MZ', label: 'Mozambique', phone: '258' },\r\n  { code: 'NA', label: 'Namibia', phone: '264' },\r\n  { code: 'NC', label: 'New Caledonia', phone: '687' },\r\n  { code: 'NE', label: 'Niger', phone: '227' },\r\n  { code: 'NF', label: 'Norfolk Island', phone: '672' },\r\n  { code: 'NG', label: 'Nigeria', phone: '234' },\r\n  { code: 'NI', label: 'Nicaragua', phone: '505' },\r\n  { code: 'NL', label: 'Netherlands', phone: '31' },\r\n  { code: 'NO', label: 'Norway', phone: '47' },\r\n  { code: 'NP', label: 'Nepal', phone: '977' },\r\n  { code: 'NR', label: 'Nauru', phone: '674' },\r\n  { code: 'NU', label: 'Niue', phone: '683' },\r\n  { code: 'NZ', label: 'New Zealand', phone: '64' },\r\n  { code: 'OM', label: 'Oman', phone: '968' },\r\n  { code: 'PA', label: 'Panama', phone: '507' },\r\n  { code: 'PE', label: 'Peru', phone: '51' },\r\n  { code: 'PF', label: 'French Polynesia', phone: '689' },\r\n  { code: 'PG', label: 'Papua New Guinea', phone: '675' },\r\n  { code: 'PH', label: 'Philippines', phone: '63' },\r\n  { code: 'PK', label: 'Pakistan', phone: '92' },\r\n  { code: 'PL', label: 'Poland', phone: '48' },\r\n  { code: 'PM', label: 'Saint Pierre and Miquelon', phone: '508' },\r\n  { code: 'PN', label: 'Pitcairn', phone: '870' },\r\n  { code: 'PR', label: 'Puerto Rico', phone: '1' },\r\n  { code: 'PS', label: 'Palestine, State of', phone: '970' },\r\n  { code: 'PT', label: 'Portugal', phone: '351' },\r\n  { code: 'PW', label: 'Palau', phone: '680' },\r\n  { code: 'PY', label: 'Paraguay', phone: '595' },\r\n  { code: 'QA', label: 'Qatar', phone: '974' },\r\n  { code: 'RE', label: 'Reunion', phone: '262' },\r\n  { code: 'RO', label: 'Romania', phone: '40' },\r\n  { code: 'RS', label: 'Serbia', phone: '381' },\r\n  { code: 'RU', label: 'Russian Federation', phone: '7' },\r\n  { code: 'RW', label: 'Rwanda', phone: '250' },\r\n  { code: 'SA', label: 'Saudi Arabia', phone: '966' },\r\n  { code: 'SB', label: 'Solomon Islands', phone: '677' },\r\n  { code: 'SC', label: 'Seychelles', phone: '248' },\r\n  { code: 'SD', label: 'Sudan', phone: '249' },\r\n  { code: 'SE', label: 'Sweden', phone: '46' },\r\n  { code: 'SG', label: 'Singapore', phone: '65' },\r\n  { code: 'SH', label: 'Saint Helena', phone: '290' },\r\n  { code: 'SI', label: 'Slovenia', phone: '386' },\r\n  { code: 'SJ', label: 'Svalbard and Jan Mayen', phone: '47' },\r\n  { code: 'SK', label: 'Slovakia', phone: '421' },\r\n  { code: 'SL', label: 'Sierra Leone', phone: '232' },\r\n  { code: 'SM', label: 'San Marino', phone: '378' },\r\n  { code: 'SN', label: 'Senegal', phone: '221' },\r\n  { code: 'SO', label: 'Somalia', phone: '252' },\r\n  { code: 'SR', label: 'Suriname', phone: '597' },\r\n  { code: 'SS', label: 'South Sudan', phone: '211' },\r\n  { code: 'ST', label: 'Sao Tome and Principe', phone: '239' },\r\n  { code: 'SV', label: 'El Salvador', phone: '503' },\r\n  { code: 'SX', label: 'Sint Maarten (Dutch part)', phone: '1-721' },\r\n  { code: 'SY', label: 'Syrian Arab Republic', phone: '963' },\r\n  { code: 'SZ', label: 'Swaziland', phone: '268' },\r\n  { code: 'TC', label: 'Turks and Caicos Islands', phone: '1-649' },\r\n  { code: 'TD', label: 'Chad', phone: '235' },\r\n  { code: 'TF', label: 'French Southern Territories', phone: '262' },\r\n  { code: 'TG', label: 'Togo', phone: '228' },\r\n  { code: 'TH', label: 'Thailand', phone: '66' },\r\n  { code: 'TJ', label: 'Tajikistan', phone: '992' },\r\n  { code: 'TK', label: 'Tokelau', phone: '690' },\r\n  { code: 'TL', label: 'Timor-Leste', phone: '670' },\r\n  { code: 'TM', label: 'Turkmenistan', phone: '993' },\r\n  { code: 'TN', label: 'Tunisia', phone: '216' },\r\n  { code: 'TO', label: 'Tonga', phone: '676' },\r\n  { code: 'TR', label: 'Turkey', phone: '90' },\r\n  { code: 'TT', label: 'Trinidad and Tobago', phone: '1-868' },\r\n  { code: 'TV', label: 'Tuvalu', phone: '688' },\r\n  { code: 'TW', label: 'Taiwan, Province of China', phone: '886' },\r\n  { code: 'TZ', label: 'United Republic of Tanzania', phone: '255' },\r\n  { code: 'UA', label: 'Ukraine', phone: '380' },\r\n  { code: 'UG', label: 'Uganda', phone: '256' },\r\n  { code: 'US', label: 'United States', phone: '1', suggested: true },\r\n  { code: 'UY', label: 'Uruguay', phone: '598' },\r\n  { code: 'UZ', label: 'Uzbekistan', phone: '998' },\r\n  { code: 'VA', label: 'Holy See (Vatican City State)', phone: '379' },\r\n  { code: 'VC', label: 'Saint Vincent and the Grenadines', phone: '1-784' },\r\n  { code: 'VE', label: 'Venezuela', phone: '58' },\r\n  { code: 'VG', label: 'British Virgin Islands', phone: '1-284' },\r\n  { code: 'VI', label: 'US Virgin Islands', phone: '1-340' },\r\n  { code: 'VN', label: 'Vietnam', phone: '84' },\r\n  { code: 'VU', label: 'Vanuatu', phone: '678' },\r\n  { code: 'WF', label: 'Wallis and Futuna', phone: '681' },\r\n  { code: 'WS', label: 'Samoa', phone: '685' },\r\n  { code: 'XK', label: 'Kosovo', phone: '383' },\r\n  { code: 'YE', label: 'Yemen', phone: '967' },\r\n  { code: 'YT', label: 'Mayotte', phone: '262' },\r\n  { code: 'ZA', label: 'South Africa', phone: '27' },\r\n  { code: 'ZM', label: 'Zambia', phone: '260' },\r\n  { code: 'ZW', label: 'Zimbabwe', phone: '263' },\r\n];","import React from 'react';\r\nimport GlobalStats from './GlobalStats.js'\r\nimport GraphSearch from './GraphSearch.js'\r\nimport SearchBar from './SearchBar.js'\r\n\r\nexport default function FullWidthGrid({currentScreen, userId}) {\r\n  if(currentScreen === 0)\r\n    return <GlobalStats/>\r\n  else  if(currentScreen === 1)\r\n    return <SearchBar userId={userId}/>\r\n  else \r\n    return <GraphSearch/>\r\n  \r\n}\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Map from '@material-ui/icons/Map';\r\nimport Flag from '@material-ui/icons/Flag';\r\nimport GraphicEq from '@material-ui/icons/GraphicEq';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n});\r\nexport default function FootNav({ screenConfig }) {\r\n  const classes = useStyles();\r\n  const handleChange = (event, newValue) => {\r\n    screenConfig[1](newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper square className={classes.root}>\r\n      <Tabs\r\n        value={screenConfig[0]}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"secondary\"\r\n        aria-label=\"icon label tabs example\"\r\n      >\r\n        <Tab icon={<Map />} label=\"Global Stats\" />\r\n        <Tab icon={<Flag />} label=\"Country Stats\" />\r\n        <Tab icon={<GraphicEq />} label=\"Graphs\" />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport NavBar from './Components/NavBar.js'\r\nimport InfoPanel from './Components/InfoPanel.js'\r\nimport FootNav from './Components/FootNav.js'\r\n\r\nconst userId = Math.floor(Math.random() * 1000000);\r\nfunction App() {\r\n  const screenConfig = useState(0)\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar userId={userId}/>\r\n      <InfoPanel currentScreen={screenConfig[0]} userId={userId}/>\r\n      <FootNav screenConfig={screenConfig} id=\"navTabs\"/>\r\n    </div>\r\n    )\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}